// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

package com.krest.mq.core.entity;

public final class MQMessage {
  private MQMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MQEntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MQEntity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *消息 id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    String getId();
    /**
     * <pre>
     *消息 id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @return A list containing the queue.
     */
    java.util.List<String>
        getQueueList();
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @return The count of queue.
     */
    int getQueueCount();
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @param index The index of the element to return.
     * @return The queue at the given index.
     */
    String getQueue(int index);
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the queue at the given index.
     */
    com.google.protobuf.ByteString
        getQueueBytes(int index);

    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    int getQueueInfoCount();
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    boolean containsQueueInfo(
        String key);
    /**
     * Use {@link #getQueueInfoMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getQueueInfo();
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    java.util.Map<String, Integer>
    getQueueInfoMap();
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */

    int getQueueInfoOrDefault(
        String key,
        int defaultValue);
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */

    int getQueueInfoOrThrow(
        String key);

    /**
     * <pre>
     * 消息内容
     * </pre>
     *
     * <code>string msg = 4;</code>
     * @return The msg.
     */
    String getMsg();
    /**
     * <pre>
     * 消息内容
     * </pre>
     *
     * <code>string msg = 4;</code>
     * @return The bytes for msg.
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    /**
     * <pre>
     * 消息时间
     * </pre>
     *
     * <code>string dateTime = 5;</code>
     * @return The dateTime.
     */
    String getDateTime();
    /**
     * <pre>
     * 消息时间
     * </pre>
     *
     * <code>string dateTime = 5;</code>
     * @return The bytes for dateTime.
     */
    com.google.protobuf.ByteString
        getDateTimeBytes();

    /**
     * <pre>
     * 是否需要 ack
     * </pre>
     *
     * <code>bool isAck = 6;</code>
     * @return The isAck.
     */
    boolean getIsAck();

    /**
     * <pre>
     * ack 标志位
     * </pre>
     *
     * <code>bool ack = 7;</code>
     * @return The ack.
     */
    boolean getAck();

    /**
     * <pre>
     * 消息类型 1 生产着 2 消费者 3 Ack 确认消息
     * </pre>
     *
     * <code>int32 msgType = 8;</code>
     * @return The msgType.
     */
    int getMsgType();

    /**
     * <pre>
     * 错误标识位
     * </pre>
     *
     * <code>bool errFlag = 9;</code>
     * @return The errFlag.
     */
    boolean getErrFlag();

    /**
     * <pre>
     * 传输方式 1 tcp, 2 udp
     * </pre>
     *
     * <code>int32 connType = 10;</code>
     * @return The connType.
     */
    int getConnType();

    /**
     * <pre>
     * 消息的发送方式 1, 单点 2，广播
     * </pre>
     *
     * <code>int32 transferType = 13;</code>
     * @return The transferType.
     */
    int getTransferType();

    /**
     * <pre>
     * 过期时间,单位毫秒
     * </pre>
     *
     * <code>int64 timeout = 14;</code>
     * @return The timeout.
     */
    long getTimeout();
  }
  /**
   * Protobuf type {@code MQEntity}
   */
  public static final class MQEntity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MQEntity)
      MQEntityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MQEntity.newBuilder() to construct.
    private MQEntity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MQEntity() {
      id_ = "";
      queue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      msg_ = "";
      dateTime_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new MQEntity();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MQEntity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                queue_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              queue_.add(s);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                queueInfo_ = com.google.protobuf.MapField.newMapField(
                    QueueInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<String, Integer>
              queueInfo__ = input.readMessage(
                  QueueInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              queueInfo_.getMutableMap().put(
                  queueInfo__.getKey(), queueInfo__.getValue());
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              msg_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              dateTime_ = s;
              break;
            }
            case 48: {

              isAck_ = input.readBool();
              break;
            }
            case 56: {

              ack_ = input.readBool();
              break;
            }
            case 64: {

              msgType_ = input.readInt32();
              break;
            }
            case 72: {

              errFlag_ = input.readBool();
              break;
            }
            case 80: {

              connType_ = input.readInt32();
              break;
            }
            case 104: {

              transferType_ = input.readInt32();
              break;
            }
            case 112: {

              timeout_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          queue_ = queue_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MQMessage.internal_static_MQEntity_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetQueueInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MQMessage.internal_static_MQEntity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MQEntity.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <pre>
     *消息 id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @Override
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *消息 id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUEUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList queue_;
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @return A list containing the queue.
     */
    public com.google.protobuf.ProtocolStringList
        getQueueList() {
      return queue_;
    }
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @return The count of queue.
     */
    public int getQueueCount() {
      return queue_.size();
    }
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @param index The index of the element to return.
     * @return The queue at the given index.
     */
    public String getQueue(int index) {
      return queue_.get(index);
    }
    /**
     * <pre>
     * 插入消息队列
     * </pre>
     *
     * <code>repeated string queue = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the queue at the given index.
     */
    public com.google.protobuf.ByteString
        getQueueBytes(int index) {
      return queue_.getByteString(index);
    }

    public static final int QUEUEINFO_FIELD_NUMBER = 3;
    private static final class QueueInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  MQMessage.internal_static_MQEntity_QueueInfoEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> queueInfo_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetQueueInfo() {
      if (queueInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            QueueInfoDefaultEntryHolder.defaultEntry);
      }
      return queueInfo_;
    }

    public int getQueueInfoCount() {
      return internalGetQueueInfo().getMap().size();
    }
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */

    @Override
    public boolean containsQueueInfo(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetQueueInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getQueueInfoMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, Integer> getQueueInfo() {
      return getQueueInfoMap();
    }
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    @Override

    public java.util.Map<String, Integer> getQueueInfoMap() {
      return internalGetQueueInfo().getMap();
    }
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    @Override

    public int getQueueInfoOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, Integer> map =
          internalGetQueueInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 消费者设置 queue, 1 永久 2 临时 3 延时队列
     * </pre>
     *
     * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
     */
    @Override

    public int getQueueInfoOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, Integer> map =
          internalGetQueueInfo().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MSG_FIELD_NUMBER = 4;
    private volatile Object msg_;
    /**
     * <pre>
     * 消息内容
     * </pre>
     *
     * <code>string msg = 4;</code>
     * @return The msg.
     */
    @Override
    public String getMsg() {
      Object ref = msg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        msg_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 消息内容
     * </pre>
     *
     * <code>string msg = 4;</code>
     * @return The bytes for msg.
     */
    @Override
    public com.google.protobuf.ByteString
        getMsgBytes() {
      Object ref = msg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATETIME_FIELD_NUMBER = 5;
    private volatile Object dateTime_;
    /**
     * <pre>
     * 消息时间
     * </pre>
     *
     * <code>string dateTime = 5;</code>
     * @return The dateTime.
     */
    @Override
    public String getDateTime() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dateTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 消息时间
     * </pre>
     *
     * <code>string dateTime = 5;</code>
     * @return The bytes for dateTime.
     */
    @Override
    public com.google.protobuf.ByteString
        getDateTimeBytes() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISACK_FIELD_NUMBER = 6;
    private boolean isAck_;
    /**
     * <pre>
     * 是否需要 ack
     * </pre>
     *
     * <code>bool isAck = 6;</code>
     * @return The isAck.
     */
    @Override
    public boolean getIsAck() {
      return isAck_;
    }

    public static final int ACK_FIELD_NUMBER = 7;
    private boolean ack_;
    /**
     * <pre>
     * ack 标志位
     * </pre>
     *
     * <code>bool ack = 7;</code>
     * @return The ack.
     */
    @Override
    public boolean getAck() {
      return ack_;
    }

    public static final int MSGTYPE_FIELD_NUMBER = 8;
    private int msgType_;
    /**
     * <pre>
     * 消息类型 1 生产着 2 消费者 3 Ack 确认消息
     * </pre>
     *
     * <code>int32 msgType = 8;</code>
     * @return The msgType.
     */
    @Override
    public int getMsgType() {
      return msgType_;
    }

    public static final int ERRFLAG_FIELD_NUMBER = 9;
    private boolean errFlag_;
    /**
     * <pre>
     * 错误标识位
     * </pre>
     *
     * <code>bool errFlag = 9;</code>
     * @return The errFlag.
     */
    @Override
    public boolean getErrFlag() {
      return errFlag_;
    }

    public static final int CONNTYPE_FIELD_NUMBER = 10;
    private int connType_;
    /**
     * <pre>
     * 传输方式 1 tcp, 2 udp
     * </pre>
     *
     * <code>int32 connType = 10;</code>
     * @return The connType.
     */
    @Override
    public int getConnType() {
      return connType_;
    }

    public static final int TRANSFERTYPE_FIELD_NUMBER = 13;
    private int transferType_;
    /**
     * <pre>
     * 消息的发送方式 1, 单点 2，广播
     * </pre>
     *
     * <code>int32 transferType = 13;</code>
     * @return The transferType.
     */
    @Override
    public int getTransferType() {
      return transferType_;
    }

    public static final int TIMEOUT_FIELD_NUMBER = 14;
    private long timeout_;
    /**
     * <pre>
     * 过期时间,单位毫秒
     * </pre>
     *
     * <code>int64 timeout = 14;</code>
     * @return The timeout.
     */
    @Override
    public long getTimeout() {
      return timeout_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      for (int i = 0; i < queue_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, queue_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetQueueInfo(),
          QueueInfoDefaultEntryHolder.defaultEntry,
          3);
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(msg_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, msg_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dateTime_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dateTime_);
      }
      if (isAck_ != false) {
        output.writeBool(6, isAck_);
      }
      if (ack_ != false) {
        output.writeBool(7, ack_);
      }
      if (msgType_ != 0) {
        output.writeInt32(8, msgType_);
      }
      if (errFlag_ != false) {
        output.writeBool(9, errFlag_);
      }
      if (connType_ != 0) {
        output.writeInt32(10, connType_);
      }
      if (transferType_ != 0) {
        output.writeInt32(13, transferType_);
      }
      if (timeout_ != 0L) {
        output.writeInt64(14, timeout_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < queue_.size(); i++) {
          dataSize += computeStringSizeNoTag(queue_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getQueueList().size();
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetQueueInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        queueInfo__ = QueueInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, queueInfo__);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(msg_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, msg_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dateTime_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dateTime_);
      }
      if (isAck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isAck_);
      }
      if (ack_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, ack_);
      }
      if (msgType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, msgType_);
      }
      if (errFlag_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, errFlag_);
      }
      if (connType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, connType_);
      }
      if (transferType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, transferType_);
      }
      if (timeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, timeout_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MQEntity)) {
        return super.equals(obj);
      }
      MQEntity other = (MQEntity) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getQueueList()
          .equals(other.getQueueList())) return false;
      if (!internalGetQueueInfo().equals(
          other.internalGetQueueInfo())) return false;
      if (!getMsg()
          .equals(other.getMsg())) return false;
      if (!getDateTime()
          .equals(other.getDateTime())) return false;
      if (getIsAck()
          != other.getIsAck()) return false;
      if (getAck()
          != other.getAck()) return false;
      if (getMsgType()
          != other.getMsgType()) return false;
      if (getErrFlag()
          != other.getErrFlag()) return false;
      if (getConnType()
          != other.getConnType()) return false;
      if (getTransferType()
          != other.getTransferType()) return false;
      if (getTimeout()
          != other.getTimeout()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getQueueCount() > 0) {
        hash = (37 * hash) + QUEUE_FIELD_NUMBER;
        hash = (53 * hash) + getQueueList().hashCode();
      }
      if (!internalGetQueueInfo().getMap().isEmpty()) {
        hash = (37 * hash) + QUEUEINFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetQueueInfo().hashCode();
      }
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      hash = (37 * hash) + DATETIME_FIELD_NUMBER;
      hash = (53 * hash) + getDateTime().hashCode();
      hash = (37 * hash) + ISACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsAck());
      hash = (37 * hash) + ACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAck());
      hash = (37 * hash) + MSGTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMsgType();
      hash = (37 * hash) + ERRFLAG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getErrFlag());
      hash = (37 * hash) + CONNTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getConnType();
      hash = (37 * hash) + TRANSFERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getTransferType();
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeout());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MQEntity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQEntity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MQEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MQEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MQEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MQEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MQEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MQEntity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MQEntity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MQEntity)
        MQEntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MQMessage.internal_static_MQEntity_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetQueueInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableQueueInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MQMessage.internal_static_MQEntity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MQEntity.class, Builder.class);
      }

      // Construct using com.krest.mq.core.entity.MQMessage.MQEntity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = "";

        queue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableQueueInfo().clear();
        msg_ = "";

        dateTime_ = "";

        isAck_ = false;

        ack_ = false;

        msgType_ = 0;

        errFlag_ = false;

        connType_ = 0;

        transferType_ = 0;

        timeout_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MQMessage.internal_static_MQEntity_descriptor;
      }

      @Override
      public MQEntity getDefaultInstanceForType() {
        return MQEntity.getDefaultInstance();
      }

      @Override
      public MQEntity build() {
        MQEntity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MQEntity buildPartial() {
        MQEntity result = new MQEntity(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (((bitField0_ & 0x00000001) != 0)) {
          queue_ = queue_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.queue_ = queue_;
        result.queueInfo_ = internalGetQueueInfo();
        result.queueInfo_.makeImmutable();
        result.msg_ = msg_;
        result.dateTime_ = dateTime_;
        result.isAck_ = isAck_;
        result.ack_ = ack_;
        result.msgType_ = msgType_;
        result.errFlag_ = errFlag_;
        result.connType_ = connType_;
        result.transferType_ = transferType_;
        result.timeout_ = timeout_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MQEntity) {
          return mergeFrom((MQEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MQEntity other) {
        if (other == MQEntity.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.queue_.isEmpty()) {
          if (queue_.isEmpty()) {
            queue_ = other.queue_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureQueueIsMutable();
            queue_.addAll(other.queue_);
          }
          onChanged();
        }
        internalGetMutableQueueInfo().mergeFrom(
            other.internalGetQueueInfo());
        if (!other.getMsg().isEmpty()) {
          msg_ = other.msg_;
          onChanged();
        }
        if (!other.getDateTime().isEmpty()) {
          dateTime_ = other.dateTime_;
          onChanged();
        }
        if (other.getIsAck() != false) {
          setIsAck(other.getIsAck());
        }
        if (other.getAck() != false) {
          setAck(other.getAck());
        }
        if (other.getMsgType() != 0) {
          setMsgType(other.getMsgType());
        }
        if (other.getErrFlag() != false) {
          setErrFlag(other.getErrFlag());
        }
        if (other.getConnType() != 0) {
          setConnType(other.getConnType());
        }
        if (other.getTransferType() != 0) {
          setTransferType(other.getTransferType());
        }
        if (other.getTimeout() != 0L) {
          setTimeout(other.getTimeout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MQEntity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MQEntity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <pre>
       *消息 id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *消息 id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *消息 id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息 id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息 id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList queue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureQueueIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          queue_ = new com.google.protobuf.LazyStringArrayList(queue_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @return A list containing the queue.
       */
      public com.google.protobuf.ProtocolStringList
          getQueueList() {
        return queue_.getUnmodifiableView();
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @return The count of queue.
       */
      public int getQueueCount() {
        return queue_.size();
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param index The index of the element to return.
       * @return The queue at the given index.
       */
      public String getQueue(int index) {
        return queue_.get(index);
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the queue at the given index.
       */
      public com.google.protobuf.ByteString
          getQueueBytes(int index) {
        return queue_.getByteString(index);
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param index The index to set the value at.
       * @param value The queue to set.
       * @return This builder for chaining.
       */
      public Builder setQueue(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureQueueIsMutable();
        queue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param value The queue to add.
       * @return This builder for chaining.
       */
      public Builder addQueue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureQueueIsMutable();
        queue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param values The queue to add.
       * @return This builder for chaining.
       */
      public Builder addAllQueue(
          Iterable<String> values) {
        ensureQueueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, queue_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearQueue() {
        queue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 插入消息队列
       * </pre>
       *
       * <code>repeated string queue = 2;</code>
       * @param value The bytes of the queue to add.
       * @return This builder for chaining.
       */
      public Builder addQueueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureQueueIsMutable();
        queue_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> queueInfo_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetQueueInfo() {
        if (queueInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              QueueInfoDefaultEntryHolder.defaultEntry);
        }
        return queueInfo_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableQueueInfo() {
        onChanged();;
        if (queueInfo_ == null) {
          queueInfo_ = com.google.protobuf.MapField.newMapField(
              QueueInfoDefaultEntryHolder.defaultEntry);
        }
        if (!queueInfo_.isMutable()) {
          queueInfo_ = queueInfo_.copy();
        }
        return queueInfo_;
      }

      public int getQueueInfoCount() {
        return internalGetQueueInfo().getMap().size();
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */

      @Override
      public boolean containsQueueInfo(
          String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetQueueInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getQueueInfoMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<String, Integer> getQueueInfo() {
        return getQueueInfoMap();
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */
      @Override

      public java.util.Map<String, Integer> getQueueInfoMap() {
        return internalGetQueueInfo().getMap();
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */
      @Override

      public int getQueueInfoOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<String, Integer> map =
            internalGetQueueInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */
      @Override

      public int getQueueInfoOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<String, Integer> map =
            internalGetQueueInfo().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearQueueInfo() {
        internalGetMutableQueueInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */

      public Builder removeQueueInfo(
          String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableQueueInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableQueueInfo() {
        return internalGetMutableQueueInfo().getMutableMap();
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */
      public Builder putQueueInfo(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException("map key"); }
        
        internalGetMutableQueueInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 消费者设置 queue, 1 永久 2 临时 3 延时队列
       * </pre>
       *
       * <code>map&lt;string, int32&gt; queueInfo = 3;</code>
       */

      public Builder putAllQueueInfo(
          java.util.Map<String, Integer> values) {
        internalGetMutableQueueInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private Object msg_ = "";
      /**
       * <pre>
       * 消息内容
       * </pre>
       *
       * <code>string msg = 4;</code>
       * @return The msg.
       */
      public String getMsg() {
        Object ref = msg_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 消息内容
       * </pre>
       *
       * <code>string msg = 4;</code>
       * @return The bytes for msg.
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 消息内容
       * </pre>
       *
       * <code>string msg = 4;</code>
       * @param value The msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息内容
       * </pre>
       *
       * <code>string msg = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息内容
       * </pre>
       *
       * <code>string msg = 4;</code>
       * @param value The bytes for msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        msg_ = value;
        onChanged();
        return this;
      }

      private Object dateTime_ = "";
      /**
       * <pre>
       * 消息时间
       * </pre>
       *
       * <code>string dateTime = 5;</code>
       * @return The dateTime.
       */
      public String getDateTime() {
        Object ref = dateTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dateTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 消息时间
       * </pre>
       *
       * <code>string dateTime = 5;</code>
       * @return The bytes for dateTime.
       */
      public com.google.protobuf.ByteString
          getDateTimeBytes() {
        Object ref = dateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 消息时间
       * </pre>
       *
       * <code>string dateTime = 5;</code>
       * @param value The dateTime to set.
       * @return This builder for chaining.
       */
      public Builder setDateTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息时间
       * </pre>
       *
       * <code>string dateTime = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDateTime() {
        
        dateTime_ = getDefaultInstance().getDateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息时间
       * </pre>
       *
       * <code>string dateTime = 5;</code>
       * @param value The bytes for dateTime to set.
       * @return This builder for chaining.
       */
      public Builder setDateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dateTime_ = value;
        onChanged();
        return this;
      }

      private boolean isAck_ ;
      /**
       * <pre>
       * 是否需要 ack
       * </pre>
       *
       * <code>bool isAck = 6;</code>
       * @return The isAck.
       */
      @Override
      public boolean getIsAck() {
        return isAck_;
      }
      /**
       * <pre>
       * 是否需要 ack
       * </pre>
       *
       * <code>bool isAck = 6;</code>
       * @param value The isAck to set.
       * @return This builder for chaining.
       */
      public Builder setIsAck(boolean value) {
        
        isAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否需要 ack
       * </pre>
       *
       * <code>bool isAck = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAck() {
        
        isAck_ = false;
        onChanged();
        return this;
      }

      private boolean ack_ ;
      /**
       * <pre>
       * ack 标志位
       * </pre>
       *
       * <code>bool ack = 7;</code>
       * @return The ack.
       */
      @Override
      public boolean getAck() {
        return ack_;
      }
      /**
       * <pre>
       * ack 标志位
       * </pre>
       *
       * <code>bool ack = 7;</code>
       * @param value The ack to set.
       * @return This builder for chaining.
       */
      public Builder setAck(boolean value) {
        
        ack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ack 标志位
       * </pre>
       *
       * <code>bool ack = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAck() {
        
        ack_ = false;
        onChanged();
        return this;
      }

      private int msgType_ ;
      /**
       * <pre>
       * 消息类型 1 生产着 2 消费者 3 Ack 确认消息
       * </pre>
       *
       * <code>int32 msgType = 8;</code>
       * @return The msgType.
       */
      @Override
      public int getMsgType() {
        return msgType_;
      }
      /**
       * <pre>
       * 消息类型 1 生产着 2 消费者 3 Ack 确认消息
       * </pre>
       *
       * <code>int32 msgType = 8;</code>
       * @param value The msgType to set.
       * @return This builder for chaining.
       */
      public Builder setMsgType(int value) {
        
        msgType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型 1 生产着 2 消费者 3 Ack 确认消息
       * </pre>
       *
       * <code>int32 msgType = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgType() {
        
        msgType_ = 0;
        onChanged();
        return this;
      }

      private boolean errFlag_ ;
      /**
       * <pre>
       * 错误标识位
       * </pre>
       *
       * <code>bool errFlag = 9;</code>
       * @return The errFlag.
       */
      @Override
      public boolean getErrFlag() {
        return errFlag_;
      }
      /**
       * <pre>
       * 错误标识位
       * </pre>
       *
       * <code>bool errFlag = 9;</code>
       * @param value The errFlag to set.
       * @return This builder for chaining.
       */
      public Builder setErrFlag(boolean value) {
        
        errFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误标识位
       * </pre>
       *
       * <code>bool errFlag = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrFlag() {
        
        errFlag_ = false;
        onChanged();
        return this;
      }

      private int connType_ ;
      /**
       * <pre>
       * 传输方式 1 tcp, 2 udp
       * </pre>
       *
       * <code>int32 connType = 10;</code>
       * @return The connType.
       */
      @Override
      public int getConnType() {
        return connType_;
      }
      /**
       * <pre>
       * 传输方式 1 tcp, 2 udp
       * </pre>
       *
       * <code>int32 connType = 10;</code>
       * @param value The connType to set.
       * @return This builder for chaining.
       */
      public Builder setConnType(int value) {
        
        connType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 传输方式 1 tcp, 2 udp
       * </pre>
       *
       * <code>int32 connType = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnType() {
        
        connType_ = 0;
        onChanged();
        return this;
      }

      private int transferType_ ;
      /**
       * <pre>
       * 消息的发送方式 1, 单点 2，广播
       * </pre>
       *
       * <code>int32 transferType = 13;</code>
       * @return The transferType.
       */
      @Override
      public int getTransferType() {
        return transferType_;
      }
      /**
       * <pre>
       * 消息的发送方式 1, 单点 2，广播
       * </pre>
       *
       * <code>int32 transferType = 13;</code>
       * @param value The transferType to set.
       * @return This builder for chaining.
       */
      public Builder setTransferType(int value) {
        
        transferType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息的发送方式 1, 单点 2，广播
       * </pre>
       *
       * <code>int32 transferType = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransferType() {
        
        transferType_ = 0;
        onChanged();
        return this;
      }

      private long timeout_ ;
      /**
       * <pre>
       * 过期时间,单位毫秒
       * </pre>
       *
       * <code>int64 timeout = 14;</code>
       * @return The timeout.
       */
      @Override
      public long getTimeout() {
        return timeout_;
      }
      /**
       * <pre>
       * 过期时间,单位毫秒
       * </pre>
       *
       * <code>int64 timeout = 14;</code>
       * @param value The timeout to set.
       * @return This builder for chaining.
       */
      public Builder setTimeout(long value) {
        
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 过期时间,单位毫秒
       * </pre>
       *
       * <code>int64 timeout = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeout() {
        
        timeout_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MQEntity)
    }

    // @@protoc_insertion_point(class_scope:MQEntity)
    private static final MQEntity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MQEntity();
    }

    public static MQEntity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MQEntity>
        PARSER = new com.google.protobuf.AbstractParser<MQEntity>() {
      @Override
      public MQEntity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MQEntity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MQEntity> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MQEntity> getParserForType() {
      return PARSER;
    }

    @Override
    public MQEntity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MQEntity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MQEntity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MQEntity_QueueInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MQEntity_QueueInfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rMessage.proto\"\232\002\n\010MQEntity\022\n\n\002id\030\001 \001(\t" +
      "\022\r\n\005queue\030\002 \003(\t\022+\n\tqueueInfo\030\003 \003(\0132\030.MQE" +
      "ntity.QueueInfoEntry\022\013\n\003msg\030\004 \001(\t\022\020\n\010dat" +
      "eTime\030\005 \001(\t\022\r\n\005isAck\030\006 \001(\010\022\013\n\003ack\030\007 \001(\010\022" +
      "\017\n\007msgType\030\010 \001(\005\022\017\n\007errFlag\030\t \001(\010\022\020\n\010con" +
      "nType\030\n \001(\005\022\024\n\014transferType\030\r \001(\005\022\017\n\007tim" +
      "eout\030\016 \001(\003\0320\n\016QueueInfoEntry\022\013\n\003key\030\001 \001(" +
      "\t\022\r\n\005value\030\002 \001(\005:\0028\001B\'\n\030com.krest.mq.cor" +
      "e.entityB\tMQMessageH\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MQEntity_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MQEntity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MQEntity_descriptor,
        new String[] { "Id", "Queue", "QueueInfo", "Msg", "DateTime", "IsAck", "Ack", "MsgType", "ErrFlag", "ConnType", "TransferType", "Timeout", });
    internal_static_MQEntity_QueueInfoEntry_descriptor =
      internal_static_MQEntity_descriptor.getNestedTypes().get(0);
    internal_static_MQEntity_QueueInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MQEntity_QueueInfoEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
